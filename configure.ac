dnl########################################################################
dnl                                                                      ##
dnl                 Language Technologies Institute                      ##
dnl                    Carnegie Mellon University                        ##
dnl                     Copyright (c) 1999-2001                          ##
dnl                       All Rights Reserved.                           ##
dnl                                                                      ##
dnl Permission is hereby granted, free of charge, to use and distribute  ##
dnl this software and its documentation without restriction, including   ##
dnl without limitation the rights to use, copy, modify, merge, publish,  ##
dnl distribute, sublicense, and/or sell copies of this work, and to      ##
dnl permit persons to whom this work is furnished to do so, subject to   ##
dnl the following conditions:                                            ##
dnl  1. The code must retain the above copyright notice, this list of    ##
dnl     conditions and the following disclaimer.                         ##
dnl  2. Any modifications must be clearly marked as such.                ##
dnl  3. Original authors' names are not deleted.                         ##
dnl  4. The authors' names are not used to endorse or promote products   ##
dnl     derived from this software without specific prior written        ##
dnl     permission.                                                      ##
dnl                                                                      ##
dnl CARNEGIE MELLON UNIVERSITY AND THE CONTRIBUTORS TO THIS WORK         ##
dnl DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING      ##
dnl ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT   ##
dnl SHALL CARNEGIE MELLON UNIVERSITY NOR THE CONTRIBUTORS BE LIABLE      ##
dnl FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    ##
dnl WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN   ##
dnl AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,          ##
dnl ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF       ##
dnl THIS SOFTWARE.                                                       ##
dnl                                                                      ##
dnl########################################################################
AC_INIT(include/flite.h)

AC_CANONICAL_SYSTEM
AC_PROG_CC
AC_PROG_RANLIB
AC_PROG_INSTALL
AC_CHECK_TOOL(AR, ar)
AC_C_BIGENDIAN

if test "x$GCC" = "xyes"; then
	CFLAGS="$CFLAGS -Wall"
fi
case "$host_os" in
	darwin*)
		CFLAGS="$CFLAGS -no-cpp-precomp"
	;;
esac

AC_ARG_ENABLE( shared, 
               [  --disable-shared     without shared library support],
	       [case "${enableval}" in
                 yes) shared=true ;;
                 no) shared=false ;;
                 *) AC_MSG_ERROR(bad value ${enableval} for shared options) ;;
                 esac],
               [shared=false])

SHFLAGS=
OTHERLIBS=
if test "$shared" = true; then
   case "$host_os" in
	linux*)
		SHFLAGS="-fPIC"
        ;;
	solaris*)
		SHFLAGS="-fPIC"
		OTHERLIBS="-lsocket -ldl"
        ;;
	*)
	;;
   esac
fi
AC_SUBST(SHFLAGS)

AC_ARG_ENABLE( sockets, 
               [  --disable-sockets     without socket support],
	       [case "${enableval}" in
                 yes) sockets=true ;;
                 no) sockets=false ;;
                 *) AC_MSG_ERROR(bad value ${enableval} for sockets options) ;;
                 esac],
               [sockets=true])
if test "$sockets" = false; then
   AC_DEFINE(CST_NO_SOCKETS)
fi

dnl
dnl Does this compiler support initialization of unions
dnl
AC_TRY_COMPILE([#include <stdio.h>],
               [ struct a { union { float b; int c; } d; };
                 const struct a e = { .d={ .b=3.14 } }; ],
               [unioninit=yes],
               [unioninit=no])
if test "$unioninit" = no; then
   AC_DEFINE(NO_UNION_INITIALIZATION)
fi

dnl
dnl Does this platform support mmap(2)
dnl Note we don't use AC_FUNC_MMAP because we really only care whether
dnl read-only mappings work.
dnl
AC_CHECK_FUNC(mmap,MMAPTYPE=posix)

dnl AC_CHECK_FUNC doesn't seem to work for Win32 API calls...
if test "x$MMAPTYPE" = x; then
   case "$host_os" in
	cygwin*|mingw*)
		MMAPTYPE=win32
	;;
 	*)
		MMAPTYPE=none
	;;
   esac
fi
AC_SUBST(MMAPTYPE)

dnl
dnl determine audio type or use none if none supported on this platform
dnl
AUDIODRIVER=none
AC_CHECK_HEADER(sys/soundcard.h,
              [AUDIODRIVER="oss"
               AUDIODEFS=-DCST_AUDIO_LINUX])
AC_CHECK_HEADER(machine/soundcard.h,
              [AUDIODRIVER="oss"
               AUDIODEFS=-DCST_AUDIO_FREEBSD])
AC_CHECK_HEADER(sys/audioio.h,
              [AUDIODRIVER="sun"
               AUDIODEFS=-DCST_AUDIO_SUNOS])
AC_CHECK_HEADER(alsa/asoundlib.h,
              [AUDIODRIVER="alsa"
	       AUDIODEFS=-DCST_AUDIO_ALSA
	       AUDIOLIBS=-lasound])
AC_CHECK_HEADER(mmsystem.h,
	      [AUDIODRIVER="wince"
	       AUDIODEFS=-DCST_AUDIO_WINCE
	       AUDIOLIBS=-lwinmm])

dnl
dnl allow the user to override the one detected above
dnl
AC_ARG_WITH( audio,
	[  --with-audio          with specific audio support (none linux freebsd etc) ],
        AUDIODRIVER=$with_audio )

if test "x$AUDIODEFS" = x; then
    case "$AUDIODRIVER" in
	linux|oss)
	    AUDIODRIVER=oss
	    AUDIODEFS=-DCST_AUDIO_LINUX
	    ;;
	*bsd)
	    AUDIODRIVER=oss
	    AUDIODEFS=-DCST_AUDIO_FREEBSD
	    ;;
	qnx)
	    AUDIODRIVER=alsa
	    AUDIODEFS=-DCST_AUDIO_QNX
	    ;;
	none)
	    AUDIODEFS=-DCST_AUDIO_NONE
	    ;;
    esac
fi
AC_SUBST(AUDIODRIVER)
AC_SUBST(AUDIODEFS)
AC_SUBST(AUDIOLIBS)

dnl
dnl language/lexicon/voice parameters 
dnl
AC_ARG_WITH( lang, [  --with-lang           with language ],
        FL_LANG=$with_lang )
if test "x$with_lang" = "x"; then
        FL_LANG="usenglish"
fi
AC_SUBST(FL_LANG)

AC_ARG_WITH( vox, [  --with-vox            with vox ],
        FL_VOX=$with_vox )
if test "x$with_vox" = "x"; then
        FL_VOX="cmu_us_kal"
fi
AC_SUBST(FL_VOX)

AC_ARG_WITH( lex, [  --with-lex            with lexicon ],
        FL_LEX=$with_lex )
if test "x$with_lex" = "x"; then
        FL_LEX="cmulex"
fi
AC_SUBST(FL_LEX)
AC_SUBST(EXEEXT)


AC_OUTPUT(config/config config/system.mak)
